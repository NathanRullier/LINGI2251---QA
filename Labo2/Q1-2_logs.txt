changed line 121:

tha = malloc(sizeof(pthread_t));

==>

tha = malloc(sizeof(pthread_t[nthread]));
....
//EOF
free(tha)


Reason:
Further down the program, we use threads with tha[i], thus if we don't allocate array of pthread_t's, we try to acces the single pthread_t var at index i which doesn't work



valgrind --tool=memcheck ./a.out 2
==22011== Memcheck, a memory error detector
==22011== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==22011== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==22011== Command: ./a.out 2
==22011== 
==22011== Invalid write of size 8
==22011==    at 0x487DCD2: pthread_create@@GLIBC_2.2.5 (in /usr/lib64/libpthread-2.30.so)
==22011==    by 0x401804: main (bht.c:135)
==22011==  Address 0x4a62048 is 0 bytes after a block of size 8 alloc'd
==22011==    at 0x4839757: malloc (vg_replace_malloc.c:309)
==22011==    by 0x40172F: main (bht.c:122)
==22011== 
==22011== Invalid read of size 8
==22011==    at 0x401852: main (bht.c:139)
==22011==  Address 0x4a62048 is 0 bytes after a block of size 8 alloc'd
==22011==    at 0x4839757: malloc (vg_replace_malloc.c:309)
==22011==    by 0x40172F: main (bht.c:122)
==22011== 
completion time for put phase = 29.708217
==22011== Invalid write of size 8
==22011==    at 0x487DCD2: pthread_create@@GLIBC_2.2.5 (in /usr/lib64/libpthread-2.30.so)
==22011==    by 0x401906: main (bht.c:149)
==22011==  Address 0x4a62048 is 0 bytes after a block of size 8 alloc'd
==22011==    at 0x4839757: malloc (vg_replace_malloc.c:309)
==22011==    by 0x40172F: main (bht.c:122)
==22011== 
1: 0 keys missing
0: 0 keys missing
==22011== Invalid read of size 8
==22011==    at 0x401954: main (bht.c:153)
==22011==  Address 0x4a62048 is 0 bytes after a block of size 8 alloc'd
==22011==    at 0x4839757: malloc (vg_replace_malloc.c:309)
==22011==    by 0x40172F: main (bht.c:122)
==22011== 
completion time for get phase = 31.179603
==22011== 
==22011== HEAP SUMMARY:
==22011==     in use at exit: 8 bytes in 1 blocks
==22011==   total heap usage: 4 allocs, 3 frees, 1,576 bytes allocated
==22011== 
==22011== LEAK SUMMARY:
==22011==    definitely lost: 8 bytes in 1 blocks
==22011==    indirectly lost: 0 bytes in 0 blocks
==22011==      possibly lost: 0 bytes in 0 blocks
==22011==    still reachable: 0 bytes in 0 blocks
==22011==         suppressed: 0 bytes in 0 blocks
==22011== Rerun with --leak-check=full to see details of leaked memory
==22011== 
==22011== For lists of detected and suppressed errors, rerun with: -s
==22011== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
